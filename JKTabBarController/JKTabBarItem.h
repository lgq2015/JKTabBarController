//
//  JKTabBarItem.h
//  JKTabBarControllerDemo
//
//  Created by Jackie CHEUNG on 13-6-7.
//  Copyright (c) 2013å¹´ Weico. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface JKTabBarItem : UIBarItem<UIAppearance>
/* Selected and unselected images are autogenerated from the image argument. For full control of
 the selected and unselected images, use -setFinishedSelectedImage:withFinishedUnselectedImage:.
 */
- (id)initWithTitle:(NSString *)title image:(UIImage *)image; // init a JKTabBarItemTypeButton type item
- (id)initWithCustomView:(UIView *)customView; // init a JKTabBarItemTypeCustomView type item

@property (nonatomic,copy)   NSString    *badgeValue;
- (void)setBadgeValue:(NSString *)badgeValue animated:(BOOL)animated; //if animated if YES,badge view will pop out animatly.

@property (nonatomic,readwrite) UIImage     *badgeBackgroundImage      UI_APPEARANCE_SELECTOR;
@property (nonatomic)           NSDictionary *badgeTextAttributeds     UI_APPEARANCE_SELECTOR;
@property (nonatomic)           UIEdgeInsets badgeInsets               UI_APPEARANCE_SELECTOR;

/* UIKit will not provide any automatic treatment to finished images. You must provide finished selected
 and unselected images in matching pairs for good results. Note that these methods are not tagged
 UI_APPEARANCE_SELECTOR and do not participate in the UIAppearance Proxy API.
 */
- (void)setFinishedSelectedImage:(UIImage *)selectedImage withFinishedUnselectedImage:(UIImage *)unselectedImage;
- (UIImage *)finishedSelectedImage;
- (UIImage *)finishedUnselectedImage;

/* To set item label text attributes use the appearance selectors available on the superclass, UIBarItem.
 
 Use the following to tweak the relative position of the label within the tab button (for handling visual centering corrections if needed because of custom text attributes)
 */
- (void)setTitlePositionAdjustment:(UIOffset)adjustment UI_APPEARANCE_SELECTOR;
- (UIOffset)titlePositionAdjustment UI_APPEARANCE_SELECTOR;

- (NSDictionary *)titleTextAttributesForState:(UIControlState)state;
- (void)setTitleTextAttributes:(NSDictionary *)attributes forState:(UIControlState)state;

@end